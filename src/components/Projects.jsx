import React, { Component } from 'react';
import { ListGroup, ListGroupItem } from 'mdbreact';

const projects = [
  {
    title: 'Roofstops',
    tagLine: 'Rooftops Worth the Stop',
    format: 'Mobile iOS',
    stack: [ 
      {name:'ReactNative', url:"https://facebook.github.io/react-native/docs/getting-started.html"},
      {name:'Custom API', url:"https://github.com/Roofstops/Roofstops-API"},
      {name:'Native Maps(Airbnb)', url:"https://github.com/react-community/react-native-maps"},
      {name:'OpenWeatherMaps API', url:"https://openweathermap.org/"},
      {name:'ReactNative Elements', url:"https://github.com/react-native-training/react-native-elements"},
      {name:'ReactNative Gesture Handler', url:"https://github.com/kmagiera/react-native-gesture-handler"},
      {name:'ReactNative Phone Call', url:"https://github.com/tiaanduplessis/react-native-phone-call"},
      {name:'ReactNative Tab View', url:"https://github.com/react-native-community/react-native-tab-view"},
      {name:'ReactNative Text Input', url:"https://github.com/halilb/react-native-textinput-effects"},
      {name:'ReactNative Vector Icons', url:"https://github.com/oblador/react-native-vector-icons"},
      {name:'React Navigation', url:"https://github.com/react-community/react-navigation"},
    ],
    info: 'A Mobile app that helps you locate the closest Roof Top bars in your area. By entering your zip code, a list is returned to the user of all the available rooftops, as well as the local temperature. The list is generated by a custom built API and database which was built by our small team. Clicking on a list item will bring the user to a detailed view which includes a picture, the address with a linked map button, the hours of operations(both regular and happy), as well as links to their phone number and website.',
    github: 'https://github.com/Roofstops/Roofstops',
    photos: [],
    objectId: 0,
  },
  {
    title: 'pHOODz',
    tagLine: 'Match with Hott & Available, Food in your Hood',
    format: 'Mobile iOS',
    stack: [
      {name:'Native iOS Swift 4', url:"https://swift.org/"},
      {name:'Xcode 9', url:"https://developer.apple.com/xcode/"},
      {name:'Firebase', url:"https://firebase.google.com/"},
      {name:'GooglePlaces API', url:"https://cloud.google.com/maps-platform/places/"}
    ],
    info: 'I wanted to make this app as user friendly as possible. To do that, I wrote as much "behind the screen" as I could. Thanks to Apple\'s core functionality kits, and Firebase\'s DB capabilities, user interaction is minimal. 1.) Select or Add a Search Query. 2.) Swipe Left for next choice. 3.) Swipe Right for desired choice. 4.) Navigate to destination.',
    github: 'https://github.com/giblerw/pHOODz',
    photos: [],
    objectId: 1,
  },
  {
    title: '',
    tagLine: '',
    format: '',
    stack: [],
    info: '',
    github: '',
    photos: [],
    objectId: 2,
  },
  {
    title: '',
    tagLine: '',
    format: '',
    stack: [],
    info: '',
    github: '',
    photos: [],
    objectId: 3,
  },
];

class Projects extends Component {
  render() {
    return(
      <div className="projects_content">
      <span className="row section_header projects_header"><u>Projects</u></span>
      {projects.map(project => {
        const myStack = project.stack;
        return (
          <div className="row project_row" key={project.objectId}>
            <div className="col-md-4 project-left">walkthrough</div>
            <div className="container col-md-8 project-center">
              <h2 className="row app_title">{project.title}</h2>
              <p className="app_subtitle">"{project.tagLine}"</p>
              <div className="row project_content_row">
                <div className="col-md-3 project_content-left">
                  <div className="row project_info_titles">
                    <u>ABSTRACTION</u>
                  </div>
                  <div className="row project_info_content">
                    CONTENT
                  </div>
                </div>
                <div className="col-md-3 project_content-center">
                  <div className="row project_info_titles">
                    <u>STACK</u>
                  </div>
                  <ListGroup className="row project_info_content flex-column">
                    {myStack.map(tech => {return<ListGroupItem href={tech.url} hover className="p-1">{tech.name}</ListGroupItem>})}
                  </ListGroup>
                </div>
                <div className="col-md-6 project_content-right">
                  
                  <div className="row project_info_content">
                    CONTENT
                  </div>
                </div>
              </div>
              <div className="github_row">
              Github butt
              </div>
            </div>
          </div>
        )
      })
      }
      </div>
    )
  }
}

export default Projects;
